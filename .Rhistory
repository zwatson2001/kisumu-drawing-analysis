sd
?var()
?matrix()
#| echo: false
library(tidyverse)
#| echo: false
library(tidyverse)
#| echo: false
library(tidyverse)
library(ggplot2)
# write a function
make_plot <- function(cyl_val){
#that takes 1 arg and filters the mpg data for rows where cyl = that arg
mpg_filtered <- filter(mpg, "cyl" == cyl_val)
# then makes a plot of hwy to cty
ggplot(
mpg_filtered,
aes(x = hwy, y = cty)
)
}
# then apply this function to all unique values of cyl
make_plot(4)
# write a function
make_plot <- function(cyl_val){
#that takes 1 arg and filters the mpg data for rows where cyl = that arg
mpg_filtered <- filter(mpg, "cyl" == cyl_val)
# then makes a plot of hwy to cty
ggplot(
mpg_filtered,
aes(x = hwy, y = cty)
) +
geom_point()
}
# then apply this function to all unique values of cyl
make_plot(4)
# write a function
make_plot <- function(cyl_val){
#that takes 1 arg and filters the mpg data for rows where cyl = that arg
mpg_filtered <- filter(mpg, cyl == cyl_val)
# then makes a plot of hwy to cty
ggplot(
mpg_filtered,
aes(x = hwy, y = cty)
) +
geom_point()
}
# then apply this function to all unique values of cyl
make_plot(4)
# write a function
make_plot <- function(cyl_val){
#that takes 1 arg and filters the mpg data for rows where cyl = that arg
mpg_filtered <- filter(mpg, cyl == cyl_val)
# then makes a plot of hwy to cty
ggplot(
mpg_filtered,
aes(x = hwy, y = cty)
) +
geom_point() +
labs(
title = "Highway vs City Miles per Gallon",
x = "Highway mpg",
y = "city mpg"
)
}
# then apply this function to all unique values of cyl
make_plot(4)
# write a function
make_plot <- function(cyl_val){
# that takes 1 arg and filters the mpg data for rows where cyl = that arg, then makes a plot of hwy to cty
ggplot(
filter(mpg, cyl == cyl_val),
aes(x = hwy, y = cty)
) +
geom_point() +
labs(
title = "Highway vs City Miles per Gallon",
x = "Highway mpg",
y = "City mpg"
)
}
# then apply this function to all unique values of cyl
map(make_plot)
# write a function
make_plot <- function(cyl_val){
# that takes 1 arg and filters the mpg data for rows where cyl = that arg, then makes a plot of hwy to cty
ggplot(
filter(mpg, cyl == cyl_val),
aes(x = hwy, y = cty)
) +
geom_point() +
labs(
title = "Highway vs City Miles per Gallon",
x = "Highway mpg",
y = "City mpg"
)
}
# then apply this function to all unique values of cyl
map(c(4,5,6,8), make_plot)
# write a function
make_plot <- function(cyl_val){
# that takes 1 arg and filters the mpg data for rows where cyl = that arg, then makes a plot of hwy to cty
ggplot(
filter(mpg, cyl == cyl_val),
aes(x = hwy, y = cty)
) +
geom_point() +
labs(
title = "Highway vs City Miles per Gallon",
x = "Highway mpg",
y = "City mpg"
)
}
# then apply this function to all unique values of cyl
map(c(distinct(cyl)), make_plot)
# write a function
make_plot <- function(cyl_val){
# that takes 1 arg and filters the mpg data for rows where cyl = that arg, then makes a plot of hwy to cty
ggplot(
filter(mpg, cyl == cyl_val),
aes(x = hwy, y = cty)
) +
geom_point() +
labs(
title = "Highway vs City Miles per Gallon",
x = "Highway mpg",
y = "City mpg"
)
}
# then apply this function to all unique values of cyl
mpg %>% map(c(distinct(cyl)), make_plot)
# write a function
make_plot <- function(cyl_val){
# that takes 1 arg and filters the mpg data for rows where cyl = that arg, then makes a plot of hwy to cty
ggplot(
filter(mpg, cyl == cyl_val),
aes(x = hwy, y = cty)
) +
geom_point() +
labs(
title = "Highway vs City Miles per Gallon",
x = "Highway mpg",
y = "City mpg"
)
}
# then apply this function to all unique values of cyl
map(c(4,5,6,8) make_plot)
# write a function
make_plot <- function(cyl_val){
# that takes 1 arg and filters the mpg data for rows where cyl = that arg, then makes a plot of hwy to cty
ggplot(
filter(mpg, cyl == cyl_val),
aes(x = hwy, y = cty)
) +
geom_point() +
labs(
title = "Highway vs City Miles per Gallon",
x = "Highway mpg",
y = "City mpg"
)
}
# then apply this function to all unique values of cyl
map(c(4,5,6,8)) make_plot)
# write a function
make_plot <- function(cyl_val){
# that takes 1 arg and filters the mpg data for rows where cyl = that arg, then makes a plot of hwy to cty
ggplot(
filter(mpg, cyl == cyl_val),
aes(x = hwy, y = cty)
) +
geom_point() +
labs(
title = "Highway vs City Miles per Gallon",
x = "Highway mpg",
y = "City mpg"
)
}
# then apply this function to all unique values of cyl
map(c(4,5,6,8) make_plot)
# write a function
make_plot <- function(cyl_val){
# that takes 1 arg and filters the mpg data for rows where cyl = that arg, then makes a plot of hwy to cty
ggplot(
filter(mpg, cyl == cyl_val),
aes(x = hwy, y = cty)
) +
geom_point() +
labs(
title = "Highway vs City Miles per Gallon",
x = "Highway mpg",
y = "City mpg"
)
}
# then apply this function to all unique values of cyl
map(c(4,5,6,8), make_plot)
# write a function
make_plot <- function(cyl_val){
# that takes 1 arg and filters the mpg data for rows where cyl = that arg, then makes a plot of hwy to cty
ggplot(
filter(mpg, cyl == cyl_val),
aes(x = hwy, y = cty)
) +
geom_point() +
labs(
title = "Highway vs City Miles per Gallon",
x = "Highway mpg",
y = "City mpg"
)
}
# then apply this function to all unique values of cyl
plot_list <- map(c(four = 4, five = 5, six = 6, eight = 8), make_plot)
# write a function
make_plot <- function(cyl_val){
# that takes 1 arg and filters the mpg data for rows where cyl = that arg, then makes a plot of hwy to cty
ggplot(
filter(mpg, cyl == cyl_val),
aes(x = hwy, y = cty)
) +
geom_point() +
labs(
title = "Highway vs City Miles per Gallon",
x = "Highway mpg",
y = "City mpg"
)
}
# then apply this function to all unique values of cyl
plot_list <- map(c(four = 4, five = 5, six = 6, eight = 8), make_plot)
plot_list
library(tidyverse)
prolific_data <- prolific_data %>%
filter(task == "question") %>%
mutate(respo0se = as.numeric(respo0se)) %>%
select(-rt)
prolific_data_pivoted <- prolific_data %>%
pivot_wider(names_from = Source.Name, values_from = respo0se)
prolific_data_pivoted <- prolific_data %>%
pivot_wider(names_from = Source.Name, values_from = respo0se)
prolific_data <- read_csv("prolific_data/pretest_data.csv")
prolific_data <- prolific_data %>%
filter(task == "question") %>%
mutate(respo0se = as.numeric(respo0se)) %>%
select(-rt)
prolific_data_pivoted <- prolific_data %>%
pivot_wider(names_from = Source.Name, values_from = respo0se)
library(tidyverse)
prolific_data <- read_csv("prolific_data/pretest_data.csv")
prolific_data <- prolific_data %>%
filter(task == "question") %>%
mutate(respo0se = as.numeric(respo0se)) %>%
select(-rt)
prolific_data_pivoted <- prolific_data %>%
pivot_wider(names_from = Source.Name, values_from = respo0se)
track_data <- prolific_data_pivoted %>%
rowwise() %>%
mutate(track_score = mean(c_across(where(is.numeric)))) %>%
select(track_id, track_score)
track_data <- track_data[order(track_data$track_score),]
final_track_list <- track_data[18:67,]
write.csv(final_track_list, "final_track_list.csv")
View(track_data)
View(track_data)
install.packages("here")
library(tidyverse)
library(ggplot2)
library(knitr)
library(here)
first_round <- list.files((here("first_round_data")), pattern = "\\.csv$", full.names = TRUE)
second_round <- list.files((here("second_round_data")), pattern = "\\.csv$", full.names = TRUE)
third_round <- list.files((here("third_round_data")), pattern = "\\.csv$", full.names = TRUE)
data <- read_csv(c(first_round, second_round, third_round), id = "file_name")
data <- data |> select(-file_name, -view_history, -trial_type, -plugin_version, -response)
data <- data |> filter(!(catch_trial & (response_category != "Airplane")) & !prep_trial)
data <- data |>
mutate(age_bin = case_when(
strtoi(sapply(str_split(sketch_id, "-"), `[`, 1)) < 21 ~ 1,
strtoi(sapply(str_split(sketch_id, "-"), `[`, 1)) < 41 ~ 2,
strtoi(sapply(str_split(sketch_id, "-"), `[`, 1)) < 61 ~ 3,
strtoi(sapply(str_split(sketch_id, "-"), `[`, 1)) < 81 ~ 4,
strtoi(sapply(str_split(sketch_id, "-"), `[`, 1)) < 101 ~ 5,
strtoi(sapply(str_split(sketch_id, "-"), `[`, 1)) < 121 ~ 6
)
)
write_csv(data, here('output', 'full_data.csv'))
rating_count_by_drawing <- data |> count(sketch_id, sketcher_category, age_bin) |> drop_na()
write_csv(rating_count_by_drawing, here('output', 'rating_count_per_drawing.csv'))
library(tidyverse)
library(ggplot2)
library(knitr)
library(here)
first_round <- list.files((here("first_round_data")), pattern = "\\.csv$", full.names = TRUE)
second_round <- list.files((here("second_round_data")), pattern = "\\.csv$", full.names = TRUE)
third_round <- list.files((here("third_round_data")), pattern = "\\.csv$", full.names = TRUE)
data <- read_csv(c(first_round, second_round, third_round), id = "file_name")
data <- data |> select(-file_name, -view_history, -trial_type, -plugin_version, -response)
data <- data |> filter(!(catch_trial & (response_category != "Airplane")) & !prep_trial)
data <- data |>
mutate(age_bin = case_when(
strtoi(sapply(str_split(sketch_id, "-"), `[`, 1)) < 21 ~ 1,
strtoi(sapply(str_split(sketch_id, "-"), `[`, 1)) < 41 ~ 2,
strtoi(sapply(str_split(sketch_id, "-"), `[`, 1)) < 61 ~ 3,
strtoi(sapply(str_split(sketch_id, "-"), `[`, 1)) < 81 ~ 4,
strtoi(sapply(str_split(sketch_id, "-"), `[`, 1)) < 101 ~ 5,
strtoi(sapply(str_split(sketch_id, "-"), `[`, 1)) < 121 ~ 6
)
)
write_csv(data, here('output', 'full_data.csv'))
rating_count_by_drawing <- data |> count(sketch_id, sketcher_category, age_bin) |> drop_na()
write_csv(rating_count_by_drawing, here('output', 'rating_count_per_drawing.csv'))
ggplot(rating_count_by_drawing, aes(x = n)) +
geom_histogram(binwidth = 1) +
scale_x_continuous(breaks = seq(0, 20, 1)) +
labs(
title = "Number of Drawings per Rating Count",
x = "Rating Count",
y = "Number of Drawings"
) +
theme_classic()
renv::init()
install.packages("renv")
renv::init()
ls
cd ..
renv::init()
setwd("C:/Users/zachw/OneDrive/Desktop/Drawing project")
setwd("C:/Users/zachw/OneDrive/Desktop/Drawing project/drawing_project_analysis")
